You are given a sorted array consisting of only integers where every element appears exactly twice, 
except for one element which appears exactly once. Find this single element that appears only once.

Example 1:

Input: [1,1,2,3,3,4,4,8,8]
Output: 2
Example 2:

Input: [3,3,7,7,10,11,11]
Output: 10

--------------------------------------------------
JavaScript Solution - 

1. Binary Search ( O(log n) )
    /**
    * @param {number[]} nums
    * @return {number}
    */
    var singleNonDuplicate = function(nums) {
        let ans;
        let start = 0,end = nums.length-1;
        while(start<=end){
            let mid = (start + (end-start)/2);
            if(nums[mid]!==nums[mid-1] && nums[mid]!==nums[mid+1])
                return nums[mid];
            else if(nums[mid]===nums[mid-1]){
                if(mid%2==0){
                    end = mid;
                }else{
                    start = mid+1;
                }
            }else{
                if(mid%2==0){
                    start = mid;
                }else{
                    end = mid-1;
                }     
            }
        }
        return -1;
    };

2. Using Xor ( O(n) )

    /**
    * @param {number[]} nums
    * @return {number}
    */
    var singleNonDuplicate = function(nums) {
        let ans;
        nums.forEach(num=>{
            ans ^= num;
        })
        
        return ans;
    };