Given an array of size n, find the majority element. 
The majority element is the element that appears more than ⌊ n/2 ⌋ times.
You may assume that the array is non-empty and the majority element always exist in the array.

Example 1:

Input: [3,2,3]
Output: 3
Example 2:

Input: [2,2,1,1,1,2,2]
Output: 2

-----------------------------------------------------------------
JavaScript Solution

var majorityElement = function(nums) {
    let count = {};
    for(let i=0;i<nums.length;i++){
        count[nums[i]]?count[nums[i]]++:count[nums[i]]=1;
    }
   return Object.keys(count).filter(key=>count[key]>nums.length/2)[0];
};


Java Solution

1. With Map

class Solution {
    public int majorityElement(int[] nums) {
        Map<Integer,Integer> map = new HashMap<Integer,Integer>();
        for(int i=0;i<nums.length;i++){
            map.put(nums[i],map.getOrDefault(nums[i],0)+1);
        }
        
        Set<Integer> keys = map.keySet();
        for(Integer k: keys){
            if(map.get(k)>nums.length/2)
                return k;
        }
        return nums[0];
    }
}

2. With sorting

class Solution {
    public int majorityElement(int[] nums) {
       Arrays.sort(nums);
       return nums[nums.length/2]; 
    }
}